{"version":3,"sources":["actions/index.js","AccountIcon.js","AddAccountIcon.js","Accounts.js","Labels.js","AccountLabel.js","LabelColumn.js","MessageLabel.js","Messages.js","MessageView.js","TopBar.js","AddAccount.js","reducers/index.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["actions","getMessages","messages","type","setLabels","labels","selectLabel","label","setMessages","account","address","selectMessage","selected","currentMsg","setAccounts","accounts","selectAccount","hideAddAccount","showAddAccount","AccountIcon_V","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","letter","charAt","toUpperCase","state","_this2","react_default","a","createElement","className","onClick","Component","AccountIcon","connect","dispatch","_ref","AddAccountIcon_V","AddAccountIcon","Accounts_V","key","map","src_AccountIcon","src_AddAccountIcon","Accounts","Label","item","formatted","substr","toLowerCase","handleClick","Labels","size","AccountLabel","Type","name","LabelColumn_V","src_AccountLabel_0","src_Labels","LabelColumn","select_account","MessageLblView","msg","snippet","logo","index","from","trim","search","logoColor","intToRGB","hashCode","bind","assertThisInitialized","str","hash","i","length","charCodeAt","c","toString","substring","style","backgroundColor","subject","MessageLabel","Messages_C","height","window","innerHeight","maxHeight","src_MessageLabel","id","Messages","undefined","select_label","MessageView","assign","to","dangerouslySetInnerHTML","__html","body","srcDoc","TopBar","defaultValue","placeholder","AddAccount_V","show","value","hide","AddAccount","addAccount","initialState","INBOX","SENT","simpleReducer","arguments","action","msgId","JSON","parse","newState","console","log","forEach","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","App","fetch","then","data","json","response","src_TopBar_0","src_AddAccount","index_esm","split","minSize","defaultSize","src_Accounts","src_LabelColumn","src_Messages","src_MessageView","Boolean","location","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bcc8b3d0.chunk.js","sourcesContent":["\nexport const openMessage = id => ({ type:\"OPEN_MESSAGE\",\n    msgId :id});\n\nconst getMessages = messages =>({type:\"GET_MESSAGES\", messages: [messages]});\n\nconst setLabels = labels =>({ type:\"SET_LABELS\", labels: labels}) ;\n\nconst selectLabel = label => ({ type: \"SELECT_LABEL\", label: label});\n\nconst setMessages = (account, label, messages) => ({ type:\"SET_MESSAGES\", account:account.address, label:label, messages: messages  });\n\nconst selectMessage = (selected) => ({ type:\"SELECT_MESSGAE\" , currentMsg: selected});\n\nconst setAccounts = accounts =>{\n   return ({ type:\"SET_ACCOUNTS\", accounts: accounts});\n};\n\nconst selectAccount = (selected) => ({ type:\"SELECT_ACCOUNT\", selected: selected});\n\nconst hideAddAccount = () => ( {type:\"HIDE_ADD_ACCOUNT\"});\nconst showAddAccount = () => ( {type:\"SHOW_ADD_ACCOUNT\"});\n\nconst actions = {\n    getMessages: getMessages,\n    setLabels:setLabels,\n    selectLabel: selectLabel,\n    setMessages:setMessages,\n    selectMessage:selectMessage,\n    setAccounts:setAccounts,\n    selectAccount:selectAccount,\n    hideAddAccount: hideAddAccount,\n    showAddAccount: showAddAccount,\n};\n\n \nexport default actions;\n","\nimport React, { Component } from 'react';\nimport {connect } from 'react-redux';\nimport './AccountIcon.css';\nimport actions from './actions/index.js' ;\n\nconst mapDispatch = dispatch => {\n    return {\n        selectAccount: ({selected}) => dispatch(actions.selectAccount(selected))\n    };\n};\n\nclass AccountIcon_V extends Component{\n\n    constructor(props){\n        super(props);\n        let letter = props.account.address.charAt(0).toUpperCase();\n        this.state = { account: props.account, letter:letter };\n    }\n\n    render(){\n        return(\n                <div className=\"account-icon\" onClick={() =>this.props.selectAccount({selected: this.props.account})}>                {this.state.letter}\n                </div>\n        );\n    }\n}\n\n\nconst AccountIcon = connect(null, mapDispatch)(AccountIcon_V);\nexport default AccountIcon;\n","import React, {Component} from 'react' ;\nimport './AddAccountIcon.css';\nimport {connect} from 'react-redux';\nimport actions from './actions/index.js';\n\nconst mapDispatch = dispatch => {\n    return{\n        showAddAccount: ()=> dispatch(actions.showAddAccount())\n    }  ;\n};\n\nclass AddAccountIcon_V extends Component{\n\n    render(){\n        return(\n                <div className=\"account-icon add-icon\" onClick={this.props.showAddAccount}>\n                +\n                </div>\n        );\n    }\n}\n\nconst AddAccountIcon = connect(null, mapDispatch)(AddAccountIcon_V);\nexport default AddAccountIcon;\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport './Accounts.css';\nimport AccountIcon from './AccountIcon.js';\nimport AddAccountIcon from './AddAccountIcon.js';\n\n\nconst mapStateToProps = state => {\n    return {accounts: state.accounts};  \n};\n\nclass Accounts_V extends Component{\n\n    render(){\n        return (\n\n                <div className=\"accounts column\" key={this.props.key}>\n                {\n                    this.props.accounts.map(function(account){\n                   ;\n                        return <AccountIcon account={account} key={account.address}/> ;\n                    })}\n                <AddAccountIcon />\n                </div>\n        );\n    }\n}\n\nconst Accounts = connect(mapStateToProps)(Accounts_V);\nexport default Accounts;\n","import React, { Component } from 'react';\nimport './Labels.css' ;\nimport {connect} from 'react-redux';\nimport actions from './actions/index.js';\n\nconst mapState = state => {\n    return {labels: state.labels, size:state.labels.size};\n};\n\nconst mapDispatch = dispatch =>{\n    return  {\n        selectLabel: ({selected}) => dispatch(actions.selectLabel(selected)) \n    };\n};\n\nclass Label extends Component{\n\n\n    handleClick(label){\n        this.props.selectLabel({selected: label });\n    }\n\n    render(){\n        const _this = this;\n        return(\n                <div className=\"labels\" >\n                {\n                    this.props.labels.map(function(item){\n                        let formatted = item.charAt(0).toUpperCase() + item.substr(1).toLowerCase();\n                    return (\n                            <div className=\"label\" key={item}\n                        onClick = {()=>_this.handleClick(item)}>\n                            {formatted}\n                            </div>\n                    );\n                    } ) }\n\n                </div>\n        );\n    }\n}\n\n\nconst Labels = connect(mapState, mapDispatch)(Label) ;\n\nexport default Labels;\n","import React, { Component } from 'react';\n\nimport './AccountLabel.css' ;\n\nclass AccountLabel extends Component{\n\n    render(){\n        let Type = this.props.type.charAt(0).toUpperCase() + this.props.type.substr(1).toLowerCase();\n        return(\n                <div className=\"account-label\" >\n                <div className =\" account-type\" >{Type} </div>\n                <div className =\" account-name\" >{this.props.name} </div>\n\n                </div>\n        );\n    }\n}\n\nexport default AccountLabel;\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux' ;\n\nimport Labels from './Labels.js';\nimport AccountLabel from './AccountLabel.js';\n\nimport './LabelColumn.css';\n\nconst mapStateToProps = (state) => {\n    return {account: state.select_account};  \n};\n\nclass LabelColumn_V extends Component{\n\n    render(){\n        return(\n                <div className=\"label-col column\" key={this.props.key}>\n                <AccountLabel type={this.props.account.type} name={this.props.account.address}/>\n                    <Labels />\n                </div>\n        );\n    }\n}\n\nconst LabelColumn = connect(mapStateToProps)(LabelColumn_V);\nexport default LabelColumn;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport './MessageLabel.css';\nimport actions from './actions/index.js';\n\nconst mapDispatch = dispatch => {\n    return {\n        selectMessage: ({selected}) => dispatch(actions.selectMessage(selected))\n    };\n};\n\nclass MessageLblView extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = { msg: props.msg};\n        this.state.msg.snippet = this.state.msg.snippet.substr(0,40) + \" ....\";\n        if(this.state.msg.logo == null){\n            let index = this.state.msg.from.trim().search(\"[A-Za-z]\");\n            let letter = this.state.msg.from.trim().charAt(index).toUpperCase();\n                \n            this.state.msg.logo = letter;\n        }\n        this.state.msg.logoColor = this.intToRGB(this.hashCode(this.state.msg.from));\n\n        this.handleClick = this.handleClick.bind(this);\n\n    }\n\n    handleClick(){\n        this.props.selectMessage({selected: this.state.msg});\n    }\n\n\n    hashCode(str) { // java String#hashCode\n        var hash = 0;\n        for (var i = 0; i < str.length; i++) {\n            hash = str.charCodeAt(i) + ((hash << 5) - hash);\n        }\n        return hash;\n    } \n\n    intToRGB(i){\n        var c = (i & 0x0A0F0A0)\n            .toString(16)\n            .toUpperCase();\n\n        return \"000000\".substring(0, 6 - c.length) + c;\n    }\n\n\n    render(){\n        \n        let style = {\n            backgroundColor: '#' + this.state.msg.logoColor\n        };\n\n        return(\n                <div className=\"message-label\" onClick={this.handleClick}>\n\n                <div className=\"logo\" style={style}> {this.state.msg.logo} </div>\n                <span className=\"sender\">\n                {this.state.msg.from}\n                    </span>\n                <span className=\"title\">\n                {this.state.msg.subject}\n                    </span>\n                <span className=\"snippet\">\n                {this.state.msg.snippet}\n                </span>\n                </div>\n\n        );\n    }\n}\n\nconst MessageLabel = connect(null, mapDispatch)(MessageLblView);\nexport default MessageLabel;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport MessageLabel from './MessageLabel.js';\n\nimport './Messages.css';\n\nconst mapStateToProps = state =>{\n    if(state.messages[state.select_label] == undefined)\n        return{messages: []};\n    return {messages: state.messages[state.select_label] };\n};\n\nclass Messages_C extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        let height =  window.innerHeight;\n        height = (height - 50);\n        let style = {\n            maxHeight: height\n        };\n        return(\n                <div className=\"messages column\" key={this.props.key} style={style}>\n                {\n                    this.props.messages.map( function(msg, index){\n                        return <MessageLabel key={msg.id} msg={msg} />;\n                    })\n                }\n                </div>\n        );\n    }\n}\n\nconst Messages = connect(mapStateToProps)(Messages_C);\n\nexport default Messages;\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport './MessageView.css';\n\nconst  mapStateToProps = state => {\n    if(state.currentMsg.logo == null){\n        let letter = state.currentMsg.from.trim().charAt(0).toUpperCase();\n        \n        let t  = Object.assign(state.currentMsg, {logo:letter});\n        return {msg: t};\n    }\n    return {msg: state.currentMsg};\n};\n\nconst ConnectedView = ({msg})=> (\n        <div className=\"message-view column\" >\n        <div className=\"title-bar\"> {msg.subject}\n        </div>\n        <div className=\"message\">\n        <div className=\"header\">\n        <div className=\"logo\">{msg.logo} </div>\n        <span className=\"sender\">{msg.from}</span>\n        <span className=\"reciever\">{msg.to}</span>\n        </div>\n        <div className=\"body-container\" >\n        <iframe className=\"body\" dangerouslySetInnerHTML = {{__html: msg.body}} srcDoc={msg.body}/>\n        </div>\n        </div>\n        </div>\n\n);\n\nconst MessageView = connect(mapStateToProps)(ConnectedView);\n\nexport default MessageView;\n","import React, {Component} from 'react';\n\nimport './TopBar.css';\n\nclass TopBar extends Component{\n\n    render(){\n        return(\n\n                <div className=\"top-bar\">\n                <span className=\"compose-btn\">Compose</span>\n                <input className=\"search\" name=\"\" type=\"text\" defaultValue=\"\" placeholder=\"Search\" /> \n                </div>\n\n        );\n    }\n\n}\n\nexport default TopBar;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport actions from './actions/index.js';\nimport './AddAccount.css';\n\nconst mapDispatch = dispatch =>{\n    return {\n        hide: () => dispatch(actions.hideAddAccount())\n    };\n};\n\nconst mapState = state =>{\n    return {\n        show: state.addAccount\n    };\n};\n\nclass AddAccount_V extends Component{\n\n\n    render(){\n        if(this.props.show)\n        return(\n            <div className=\"add-account modal\" >\n                <div className=\"dialog\">\n                <div className=\"header\"> <h1> New Account </h1> </div>\n                <div className=\"dialog-body\">\n                <li>\n                    <span>Address </span>\n                    <input type=\"text\" />\n                </li>\n                <li>\n                <span>Type </span>\n                <select>\n                <option value=\"GMAIL\"> GMail </option>\n                <option value=\"OUTLOOK\"> Outlook </option>\n                </select>\n                </li>\n                <input className=\"submit-btn\" type=\"submit\" value=\"Add account\"/>\n                <button className=\"cancel-btn\" onClick={this.props.hide}> Cancel</button>\n\n                </div>\n                </div>\n            </div>\n        );\n        else\n            return <div> </div>;\n    }\n\n}\n\nconst AddAccount = connect(mapState, mapDispatch)(AddAccount_V);\nexport default AddAccount;\n","\nconst initialState = {\n    accounts : [{ address:'0', messages:{'INBOX':[]} , type:\"TEST\" }],\n    select_account : { address:'0', messages:{'INBOX':[]} , type:\"TEST\"},\n    messages : { 'INBOX' :[], 'SENT': []},\n    labels : [ 'INBOX' ],\n    select_label: 'INBOX',\n    currentMsg : {\n        subject:\"Brunch at the Barn\",\n        from:\"Miss Quinn\",\n        to:\"to Debra Suarez\",\n        body: \"Hey friends,<br/> What do you think about having a brunch on Sunday.<br/><br/> Cheers!.\",\n        logo: null,\n    },\n    addAccount: true,\n};\n\nfunction simpleReducer(state= initialState, action) {\n    if(action.type === \"OPEN_MESSAGE\"){\n        return Object.assign(state, {currentMsg: state.messages[action.msgId]});\n    }else if(action.type === \"GET_MESSAGES\"){\n        return {  currentMsg: JSON.parse(action.messages[0]) };\n    }else if(action.type === \"SET_LABELS\"){\n        let newState = Object.assign([], state);\n        newState.labels = action.labels;\n        return newState;\n\n    }else if(action.type === \"SELECT_LABEL\"){\n        let newState = Object.assign([], state);\n        newState.select_label = action.label;\n        return newState;\n    }else if(action.type === \"SELECT_MESSGAE\"){\n        console.log(\"SELECT message\");\n        let newState = Object.assign([], state);\n        newState.currentMsg = action.currentMsg;\n        return newState;\n    }else if(action.type === \"SET_MESSAGES\") {\n        let newState = Object.assign([], state);\n        newState[action.account].messages[action.label] = action.messages;\n        return newState;\n    }else if(action.type === \"SET_ACCOUNTS\"){\n        let newState = Object.assign([], state);\n        newState.accounts = action.accounts;\n        action.accounts.forEach(function(account){\n            newState[account.address] = { messages : {}}; \n        });\n        newState.addAccount = action.accounts.size > 0;\n        return newState;\n    }else if(action.type === \"SELECT_ACCOUNT\"){\n        let newState = Object.assign([], state);\n        newState.select_account = action.selected;\n        newState.labels = action.selected.labels;\n        newState.messages = newState[action.selected.address].messages;\n        return newState;\n    }else if(action.type === \"HIDE_ADD_ACCOUNT\"){\n        let newState = Object.assign([], state);\n        newState.addAccount = false;\n        return newState;\n    }else if(action.type === \"SHOW_ADD_ACCOUNT\"){\n        let newState = Object.assign([], state);\n        newState.addAccount = true;\n        return newState;\n    }else{\n        return state;\n    }\n}\n\nexport default simpleReducer;\n","import {createStore} from 'redux';\nimport simpleReducer from '../reducers/index.js';\n\nconst store = createStore(\n    simpleReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React, { Component } from 'react';\n\nimport Accounts from './Accounts.js';\nimport LabelColumn from './LabelColumn.js';\nimport Messages from './Messages.js';\nimport MessageView from './MessageView.js';\nimport TopBar from './TopBar.js';\nimport AddAccount from './AddAccount.js';\n\nimport store from './store/index.js';\nimport actions from './actions/index.js';\n\nimport './App.css';\n\nimport SplitPane from 'react-split-pane';\n\nclass App extends Component {\n    render() {\n\n        let accountFetch =  fetch(\"http://localhost:8888/accounts/\").then(function(data){\n           return data.json();\n        }).then(function(accounts) {\n            store.dispatch(actions.setAccounts(accounts));\n            accounts.map(function(account){\n                   account.labels.map(function(label){\n                       fetch(\"http://localhost:8888/\"+account.address+\"/messages/\" + label).then(function(response){\n                           return response.json();\n                       }).then(function(messages){\n                           store.dispatch(actions.setMessages(account, label, messages)); \n                       }).then(function(){\n                           store.dispatch(actions.selectAccount(account));\n                       });\n                       \n               });\n           });\n       });\n\n\n    return (\n            <div className=\"App\">\n            <TopBar />\n            <AddAccount />\n            <div className=\"container\">\n            <SplitPane split=\"vertical\" minSize={0} defaultSize=\"6%\">\n            <Accounts />\n            <SplitPane split=\"vertical\" minSize={50} defaultSize=\"15%\">\n            <LabelColumn/>\n            <SplitPane split=\"vertical\" minSize={50} defaultSize=\"40%\">\n            <Messages />\n            <SplitPane split=\"vertical\" minSize={50} defaultSize=\"100%\">\n            <MessageView />\n            </SplitPane>\n        </SplitPane>\n            </SplitPane>\n            </SplitPane>\n            </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from 'react-redux';\nimport store from './store/index.js';\n\n\nReactDOM.render(\n        <Provider store={store}>\n        <App />\n        </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
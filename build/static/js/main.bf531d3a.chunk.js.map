{"version":3,"sources":["actions/index.js","reducers/index.js","store/index.js","Util.js","AccountIcon.js","AddAccountIcon.js","Accounts.js","Labels.js","AccountLabel.js","LabelColumn.js","MessageLabel.js","Messages.js","MessageView.js","TopBar.js","AddAccount.js","App.js","serviceWorker.js","index.js"],"names":["actions","getMessages","messages","type","setLabels","labels","selectLabel","label","setMessages","account","address","selectMessage","selected","currentMsg","setAccounts","accounts","selectAccount","hideAddAccount","showAddAccount","search","keyword","initialState","INBOX","select_account","SENT","select_label","subject","from","to","body","logo","addAccount","simpleReducer","state","arguments","length","undefined","action","Object","assign","msgId","JSON","parse","newState","forEach","size","toLowerCase","messagges","filter","msg","s","includes","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","hashCode","str","hash","i","charCodeAt","Util","accountFetch","fetch","then","data","json","dispatch","map","response","logoColor","c","toString","toUpperCase","substring","intToRGB","accountColor","AccountIcon_V","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","letter","charAt","_this2","style","backgroundColor","react_default","a","createElement","className","onClick","Component","AccountIcon","connect","_ref","AddAccountIcon_V","AddAccountIcon","Accounts_V","key","src_AccountIcon","src_AddAccountIcon","Accounts","Label","item","formatted","substr","handleClick","Labels","AccountLabel","Type","name","LabelColumn_V","src_AccountLabel_0","src_Labels","LabelColumn","MessageLblView","snippet","index","trim","bind","assertThisInitialized","dangerouslySetInnerHTML","__html","MessageLabel","Messages_C","height","innerHeight","maxHeight","src_MessageLabel","id","Messages","MessageView","color","srcDoc","TopBar_V","handleInput","event","target","value","placeholder","onChange","TopBar","AddAccount_V","handleChange","handleSubmit","handleType","setState","hide","myWindow","open","method","stringify","res","console","log","url","location","href","show","AddAccount","App","src_TopBar","src_AddAccount","index_esm","split","minSize","defaultSize","src_Accounts","src_LabelColumn","src_Messages","src_MessageView","Boolean","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bf531d3a.chunk.js","sourcesContent":["\nexport const openMessage = id => ({ type:\"OPEN_MESSAGE\",\n    msgId :id});\n\nconst getMessages = messages =>({type:\"GET_MESSAGES\", messages: [messages]});\n\nconst setLabels = labels =>({ type:\"SET_LABELS\", labels: labels}) ;\n\nconst selectLabel = label => ({ type: \"SELECT_LABEL\", label: label});\n\nconst setMessages = (account, label, messages) => ({ type:\"SET_MESSAGES\", account:account.address, label:label, messages: messages  });\n\nconst selectMessage = (selected) => ({ type:\"SELECT_MESSGAE\" , currentMsg: selected});\n\nconst setAccounts = accounts =>{\n   return ({ type:\"SET_ACCOUNTS\", accounts: accounts});\n};\n\nconst selectAccount = (selected) => ({ type:\"SELECT_ACCOUNT\", selected: selected});\n\nconst hideAddAccount = () => ( {type:\"HIDE_ADD_ACCOUNT\"});\nconst showAddAccount = () => ( {type:\"SHOW_ADD_ACCOUNT\"});\n\nconst search = (keyword) => ({type:\"SEARCH\", keyword: keyword});\n\nconst actions = {\n    getMessages: getMessages,\n    setLabels:setLabels,\n    selectLabel: selectLabel,\n    setMessages:setMessages,\n    selectMessage:selectMessage,\n    setAccounts:setAccounts,\n    selectAccount:selectAccount,\n    hideAddAccount: hideAddAccount,\n    showAddAccount: showAddAccount,\n    search: search,\n};\n\n \nexport default actions;\n","\nconst initialState = {\n    accounts : [{ address:'0', messages:{'INBOX':[]} , type:\"TEST\" }],\n    select_account : { address:'0', messages:{'INBOX':[]} , type:\"TEST\"},\n    messages : { 'INBOX' :[], 'SENT': []},\n    labels : [ 'INBOX' ],\n    select_label: 'INBOX',\n    currentMsg : {\n        subject:\"Brunch at the Barn\",\n        from:\"Miss Quinn\",\n        to:\"to Debra Suarez\",\n        body: \"Hey friends,<br/> What do you think about having a brunch on Sunday.<br/><br/> Cheers!.\",\n        logo: null,\n    },\n    addAccount: true,\n    keyword: \"\",\n};\n\nfunction simpleReducer(state= initialState, action) {\n    if(action.type === \"OPEN_MESSAGE\"){\n        return Object.assign(state, {currentMsg: state.messages[action.msgId]});\n    }else if(action.type === \"GET_MESSAGES\"){\n        return {  currentMsg: JSON.parse(action.messages[0]) };\n    }else if(action.type === \"SET_LABELS\"){\n        let newState = Object.assign([], state);\n        newState.labels = action.labels;\n        return newState;\n\n    }else if(action.type === \"SELECT_LABEL\"){\n        let newState = Object.assign([], state);\n        newState.select_label = action.label;\n        newState.keyword =\"\";\n        return newState;\n    }else if(action.type === \"SELECT_MESSGAE\"){\n        let newState = Object.assign([], state);\n        newState.currentMsg = action.currentMsg;\n        return newState;\n    }else if(action.type === \"SET_MESSAGES\") {\n        let newState = Object.assign([], state);\n        newState[action.account].messages[action.label] = action.messages;\n        return newState;\n    }else if(action.type === \"SET_ACCOUNTS\"){\n        let newState = Object.assign([], state);\n        newState.accounts = action.accounts;\n        action.accounts.forEach(function(account){\n            newState[account.address] = { messages : {}}; \n        });\n        newState.addAccount = action.accounts.size > 0;\n        return newState;\n    }else if(action.type === \"SELECT_ACCOUNT\"){\n        let newState = Object.assign([], state);\n        newState.select_account = action.selected;\n        newState.keyword =\"\";\n        newState.labels = action.selected.labels;\n        newState.messages = newState[action.selected.address].messages;\n        return newState;\n    }else if(action.type === \"HIDE_ADD_ACCOUNT\"){\n        let newState = Object.assign([], state);\n        newState.addAccount = false;\n        return newState;\n    }else if(action.type === \"SHOW_ADD_ACCOUNT\"){\n        let newState = Object.assign([], state);\n        newState.addAccount = true;\n        return newState;\n    }else if(action.type === \"SEARCH\"){\n        let newState = Object.assign([], state);\n        newState.keyword = action.keyword;\n        action.keyword = action.keyword.toLowerCase();\n        newState.messages = Object.assign([], state.messagges);\n        newState.messages[state.select_label] = newState[state.select_account.address].messages[state.select_label].filter(function(msg){\n            let s = msg.subject + msg.from + msg.to + msg.body;\n            s = s.toLowerCase();\n            if(s.includes(action.keyword))\n                return true;\n            else\n                return false;\n        });\n        return newState;\n    }else{\n        return state;\n    }\n}\n\nexport default simpleReducer;\n","import {createStore} from 'redux';\nimport simpleReducer from '../reducers/index.js';\n\nconst store = createStore(\n    simpleReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","\nimport store from './store/index.js';\nimport actions from './actions/index.js';\n\nfunction accountFetch(){\n\n      fetch(\"http://localhost:8888/accounts/\").then(function(data){\n    return data.json();\n}).then(function(accounts) {\n    store.dispatch(actions.setAccounts(accounts));\n    accounts.map(function(account){\n        account.labels.map(function(label){\n            fetch(\"http://localhost:8888/\"+account.address+\"/messages/\" + label).then(function(response){\n                return response.json();\n            }).then(function(messages){\n                store.dispatch(actions.setMessages(account, label, messages)); \n            }).then(function(){\n                store.dispatch(actions.selectAccount(account));\n            });\n            \n        });\n    });\n});\n\n}\n\nfunction hashCode(str) { // java String#hashCode\n    var hash = 0;\n    for (var i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    return hash;\n} \n\nfunction intToRGB(i){\n    var c = (i & 0x0A0F0A0)\n        .toString(16)\n        .toUpperCase();\n\n    return \"000000\".substring(0, 6 - c.length) + c;\n}\n\nfunction accountIconColor(address){\n    let hash = hashCode(address);\n    var c = (hash & 0x08080F0)\n        .toString(16)\n        .toUpperCase();\n\n    return \"000000\".substring(0, 6 - c.length) + c;\n}\n\nconst Util = {\n    accountFetch: accountFetch,\n    logoColor: (str) => intToRGB(hashCode(str)),\n    accountColor: accountIconColor,\n};\n\nexport default Util;\n","\nimport React, { Component } from 'react';\nimport {connect } from 'react-redux';\nimport './AccountIcon.css';\nimport actions from './actions/index.js' ;\nimport Util from './Util.js';\n\nconst mapDispatch = dispatch => {\n    return {\n        selectAccount: ({selected}) => dispatch(actions.selectAccount(selected))\n    };\n};\n\nclass AccountIcon_V extends Component{\n\n    constructor(props){\n        super(props);\n        let letter = props.account.address.charAt(0).toUpperCase();\n        this.state = { account: props.account, letter:letter };\n        this.state.logoColor = Util.accountColor(props.account.address);\n    }\n\n    render(){\n        let style = {\n            backgroundColor: '#' + this.state.logoColor\n        };\n\n        return(\n                <div className=\"account-icon\" onClick={() =>this.props.selectAccount({selected: this.props.account})} style={style}>                {this.state.letter}\n                </div>\n        );\n    }\n}\n\n\nconst AccountIcon = connect(null, mapDispatch)(AccountIcon_V);\nexport default AccountIcon;\n","import React, {Component} from 'react' ;\nimport './AddAccountIcon.css';\nimport {connect} from 'react-redux';\nimport actions from './actions/index.js';\n\nconst mapDispatch = dispatch => {\n    return{\n        showAddAccount: ()=> dispatch(actions.showAddAccount())\n    }  ;\n};\n\nclass AddAccountIcon_V extends Component{\n\n    render(){\n        return(\n                <div className=\"account-icon add-icon\" onClick={this.props.showAddAccount}>\n                +\n                </div>\n        );\n    }\n}\n\nconst AddAccountIcon = connect(null, mapDispatch)(AddAccountIcon_V);\nexport default AddAccountIcon;\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport './Accounts.css';\nimport AccountIcon from './AccountIcon.js';\nimport AddAccountIcon from './AddAccountIcon.js';\n\n\nconst mapStateToProps = state => {\n    return {accounts: state.accounts};  \n};\n\nclass Accounts_V extends Component{\n\n    render(){\n        return (\n\n                <div className=\"accounts column\" key={this.props.key}>\n                {\n                    this.props.accounts.map(function(account){\n                   ;\n                        return <AccountIcon account={account} key={account.address}/> ;\n                    })}\n                <AddAccountIcon />\n                </div>\n        );\n    }\n}\n\nconst Accounts = connect(mapStateToProps)(Accounts_V);\nexport default Accounts;\n","import React, { Component } from 'react';\nimport './Labels.css' ;\nimport {connect} from 'react-redux';\nimport actions from './actions/index.js';\n\nconst mapState = state => {\n    return {labels: state.labels, size:state.labels.size};\n};\n\nconst mapDispatch = dispatch =>{\n    return  {\n        selectLabel: ({selected}) => dispatch(actions.selectLabel(selected)) \n    };\n};\n\nclass Label extends Component{\n\n\n    handleClick(label){\n        this.props.selectLabel({selected: label });\n    }\n\n    render(){\n        const _this = this;\n        return(\n                <div className=\"labels\" >\n                {\n                    this.props.labels.map(function(item){\n                        let formatted = item.charAt(0).toUpperCase() + item.substr(1).toLowerCase();\n                    return (\n                            <div className=\"label\" key={item}\n                        onClick = {()=>_this.handleClick(item)}>\n                            {formatted}\n                            </div>\n                    );\n                    } ) }\n\n                </div>\n        );\n    }\n}\n\n\nconst Labels = connect(mapState, mapDispatch)(Label) ;\n\nexport default Labels;\n","import React, { Component } from 'react';\n\nimport './AccountLabel.css' ;\n\nclass AccountLabel extends Component{\n\n    render(){\n        let Type = this.props.type.charAt(0).toUpperCase() + this.props.type.substr(1).toLowerCase();\n        return(\n                <div className=\"account-label\" >\n                <div className =\" account-type\" >{Type} </div>\n                <div className =\" account-name\" >{this.props.name} </div>\n\n                </div>\n        );\n    }\n}\n\nexport default AccountLabel;\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux' ;\n\nimport Labels from './Labels.js';\nimport AccountLabel from './AccountLabel.js';\n\nimport './LabelColumn.css';\n\nconst mapStateToProps = (state) => {\n    return {account: state.select_account};  \n};\n\nclass LabelColumn_V extends Component{\n\n    render(){\n        return(\n                <div className=\"label-col column\" key={this.props.key}>\n                <AccountLabel type={this.props.account.type} name={this.props.account.address}/>\n                    <Labels />\n                </div>\n        );\n    }\n}\n\nconst LabelColumn = connect(mapStateToProps)(LabelColumn_V);\nexport default LabelColumn;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport './MessageLabel.css';\nimport actions from './actions/index.js';\nimport Util from './Util.js';\n\nconst mapDispatch = dispatch => {\n    return {\n        selectMessage: ({selected}) => dispatch(actions.selectMessage(selected))\n    };\n};\n\nclass MessageLblView extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = { msg: props.msg};\n        this.state.msg.snippet = this.state.msg.snippet.substr(0,40) + \" ....\";\n        if(this.state.msg.logo == null){\n            let index = this.state.msg.from.trim().search(\"[A-Za-z]\");\n            let letter = this.state.msg.from.trim().charAt(index).toUpperCase();\n                \n            this.state.msg.logo = letter;\n        }\n        this.state.msg.logoColor = Util.logoColor(this.state.msg.from);\n\n        this.handleClick = this.handleClick.bind(this);\n\n    }\n\n    handleClick(){\n        this.props.selectMessage({selected: this.state.msg});\n    }\n\n\n\n\n    render(){\n        \n        let style = {\n            backgroundColor: '#' + this.state.msg.logoColor\n        };\n        let backgroundColor = {\n            backgroundColor: \"#FFF\",\n        };\n\n        if(this.state.msg == this.props.selected){\n            backgroundColor.backgroundColor = \"#0037ff1f\";\n        }\n\n        return(\n                <div className=\"message-label\" onClick={this.handleClick} style={backgroundColor}>\n\n                <div className=\"logo\" style={style}> {this.state.msg.logo} </div>\n                <span className=\"sender\">\n                {this.state.msg.from}\n                    </span>\n                <span className=\"title\">\n                {this.state.msg.subject}\n                    </span>\n                <span className=\"snippet\" dangerouslySetInnerHTML = {{__html: this.state.msg.snippet}}>\n                </span>\n                </div>\n\n        );\n    }\n}\n\nconst MessageLabel = connect(null, mapDispatch)(MessageLblView);\nexport default MessageLabel;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport MessageLabel from './MessageLabel.js';\n\nimport './Messages.css';\n\nconst mapStateToProps = state =>{\n    if(state.messages[state.select_label] == undefined)\n        return{messages: [], selected: {}};\n    return {messages: state.messages[state.select_label], selected: state.currentMsg};\n};\n\nclass Messages_C extends Component{\n\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        let height =  window.innerHeight;\n        height = (height - 50);\n        let style = {\n            maxHeight: height\n        };\n        let selected = this.props.selected ;\n        return(\n                <div className=\"messages column\" key={this.props.key} style={style}>\n\n                {\n                    this.props.messages.map(\n                        function(msg, index){\n                            return <MessageLabel key={msg.id} msg={msg} selected={selected} />;\n                        }                                                       )\n                }\n\n                </div>\n        );\n    }\n}\n\nconst Messages = connect(mapStateToProps)(Messages_C);\n\nexport default Messages;\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport './MessageView.css';\n\nimport Util from './Util.js';\n\nconst  mapStateToProps = state => {\n    let logoColor = '#' + Util.logoColor(state.currentMsg.from);\n    if(state.currentMsg.logo == null){\n        let letter = state.currentMsg.from.trim().charAt(0).toUpperCase();\n        \n        let t  = Object.assign(state.currentMsg, {logo:letter});\n        return {msg: t,\n                logoColor:{\n                    backgroundColor: logoColor,\n                    color: \"white\",\n                },\n               };\n    }\n    return {\n        msg: state.currentMsg,\n        logoColor:{\n            backgroundColor: logoColor,\n            color: \"white\",\n        } ,\n    };\n};\n\nconst ConnectedView = ({msg, logoColor})=> (\n        <div className=\"message-view column\" >\n        <div className=\"title-bar\"> {msg.subject}\n        </div>\n        <div className=\"message\">\n        <div className=\"header\">\n        <div className=\"logo\" style={logoColor}>{msg.logo} </div>\n        <span className=\"sender\">{msg.from}</span>\n        <span className=\"reciever\">{msg.to}</span>\n        </div>\n        <div className=\"body-container\" >\n        <iframe className=\"body\" dangerouslySetInnerHTML = {{__html: msg.body}} srcDoc={msg.body}/>\n        </div>\n        </div>\n        </div>\n\n);\n\nconst MessageView = connect(mapStateToProps)(ConnectedView);\n\nexport default MessageView;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport actions from './actions/index.js';\nimport './TopBar.css';\n\nconst mapDispatch = dispatch =>{\n    return {\n        search: (keyword) => dispatch(actions.search(keyword))\n    };\n};\n\nconst mapState = state =>{\n    return {keyword: state.keyword};\n};\n\nclass TopBar_V extends Component{\n\n    constructor(props){\n        super(props);\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    handleInput(event){\n        this.props.search(event.target.value);\n    }\n\n    render(){\n        return(\n\n                <div className=\"top-bar\">\n                <span className=\"compose-btn\">Compose</span>\n                <input className=\"search\" name=\"\" type=\"text\" placeholder=\"Search\" onChange={this.handleInput} value={this.props.keyword}/> \n                </div>\n\n        );\n    }\n\n}\n\nconst TopBar = connect(mapState,mapDispatch)(TopBar_V);\n\nexport default TopBar;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport actions from './actions/index.js';\nimport './AddAccount.css';\nimport Util from './Util.js';\n\nconst mapDispatch = dispatch =>{\n    return {\n        hide: () => dispatch(actions.hideAddAccount())\n    };\n};\n\nconst mapState = state =>{\n    return {\n        show: state.addAccount\n    };\n};\n\nclass AddAccount_V extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            address:\"\" ,\n            type: \"GMAIL\"\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleType = this.handleType.bind(this);\n    }\n\n    handleChange(event){\n          this.setState({address: event.target.value});\n    }\n\n    handleType(event){\n        this.setState({type: event.target.value});\n    }\n\n    handleSubmit(event){\n        this.props.hide();\n        var myWindow = window.open(\"about:blank\",'Auth',);\n\n\n        fetch(\"http://localhost:8888/account/\",{\n            method: \"POST\",\n            body: JSON.stringify({\n                address: this.state.address,\n                type: this.state.type\n            })\n        }).then((response) => {\n            return response.json();\n        }).then((res) => {\n            console.log(res);\n            if(res.url !== undefined){\n                myWindow.location.href = res.url;\n            }\n        });\n    }\n\n    render(){\n        if(this.props.show)\n        return(\n            <div className=\"add-account modal\" >\n                <div className=\"dialog\">\n                <div className=\"header\"> <h1> New Account </h1> </div>\n                <div className=\"dialog-body\">\n                <li>\n                    <span>Address </span>\n                <input type=\"text\" value={this.state.address} onChange={this.handleChange} />\n                </li>\n                <li>\n                <span>Type </span>\n                <select onChange={this.handleType}>\n                <option value=\"GMAIL\"> GMail </option>\n                <option value=\"OUTLOOK\"> Outlook </option>\n                </select>\n                </li>\n                <input className=\"submit-btn\" type=\"submit\" value=\"Add account\" onClick={this.handleSubmit}/>\n                <button className=\"cancel-btn\" onClick={this.props.hide}> Cancel</button>\n\n                </div>\n                </div>\n            </div>\n        );\n        else\n            return <div> </div>;\n    }\n\n}\n\nconst AddAccount = connect(mapState, mapDispatch)(AddAccount_V);\nexport default AddAccount;\n","import React, { Component } from 'react';\n\nimport Accounts from './Accounts.js';\nimport LabelColumn from './LabelColumn.js';\nimport Messages from './Messages.js';\nimport MessageView from './MessageView.js';\nimport TopBar from './TopBar.js';\nimport AddAccount from './AddAccount.js';\n\n\nimport './App.css';\nimport Util from './Util.js';\n\nimport SplitPane from 'react-split-pane';\n\nclass App extends Component {\n    render() {\n        Util.accountFetch();\n    return (\n            <div className=\"App\">\n            <TopBar />\n            <AddAccount />\n            <div className=\"container\">\n            <SplitPane split=\"vertical\" minSize={0} defaultSize=\"46px\">\n            <Accounts />\n            <SplitPane split=\"vertical\" minSize={50} defaultSize=\"15%\">\n            <LabelColumn/>\n            <SplitPane split=\"vertical\" minSize={50} defaultSize=\"40%\">\n            <Messages />\n            <SplitPane split=\"vertical\" minSize={50} defaultSize=\"100%\">\n            <MessageView />\n            </SplitPane>\n        </SplitPane>\n            </SplitPane>\n            </SplitPane>\n            </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from 'react-redux';\nimport store from './store/index.js';\n\n\nReactDOM.render(\n        <Provider store={store}>\n        <App />\n        </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}